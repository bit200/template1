{"ast":null,"code":"import { createContext } from 'react';\nimport designResearch from \"../img/design-research.png\";\nimport userExperience from \"../img/user-experience.png\";\nimport DesignEngineering from \"../img/design-engineering.png\";\n\n// 1.) create new job \nconst JobVacancyList = [{\n  title: 'Design Research',\n  image: designResearch\n}, {\n  title: 'User Experience and Design',\n  image: userExperience\n}, {\n  title: 'Design Engineering',\n  image: DesignEngineering\n}];\nexport default JobVacancyList;\n\n// 2.) HiringContext API for job form\n\nexport const jobApplyContext = /*#__PURE__*/createContext(null);\n\n// 3.) dashboard Context API for Admin\n\nexport const adminContext = /*#__PURE__*/createContext(null);\n\n// 4.) User profile schema for database","map":{"version":3,"names":["createContext","designResearch","userExperience","DesignEngineering","JobVacancyList","title","image","jobApplyContext","adminContext"],"sources":["/app/src/store/DefaultSettings.ts"],"sourcesContent":["import React, { createContext } from 'react';\r\nimport designResearch from \"../img/design-research.png\";\r\nimport userExperience from \"../img/user-experience.png\";\r\nimport DesignEngineering from \"../img/design-engineering.png\";\r\n\r\n\r\n// 1.) create new job \r\n const JobVacancyList: { title: string, image: string }[] = [\r\n    {\r\n        title: 'Design Research',\r\n        image: designResearch\r\n    },\r\n    {\r\n        title: 'User Experience and Design',\r\n        image: userExperience\r\n    },\r\n    {\r\n        title: 'Design Engineering',\r\n        image: DesignEngineering\r\n    }\r\n]\r\nexport default JobVacancyList;\r\n\r\n// 2.) HiringContext API for job form\r\ntype jobApplyProps = {\r\n    jobRole: string,\r\n    currentIndex: number,\r\n    isOpenFormModel: boolean,\r\n    isSuccessModel: boolean,\r\n    formIsSubmit: boolean,\r\n    selectedItemHandler: (id: number) => void,\r\n    JobTitleHandler: (title: string) => void,\r\n    modelOpenHandler: (open: boolean) => void,\r\n    getCurrentItemIndex: (index: number) => void,\r\n    successModelHandler: (bool: boolean) => void\r\n    formSubmitHandler: (bool: boolean) => void,\r\n}\r\nexport const jobApplyContext = createContext<jobApplyProps | null>(null)\r\n\r\n// 3.) dashboard Context API for Admin\r\ntype adminProps = {\r\n    tableData: UserJobProfileForm[],\r\n    count: number,\r\n    defaultSort: string\r\n    filterRole: string[],\r\n    filterExp: string[],\r\n    filterStatus: string[],\r\n    filterLocation: string[],\r\n    resetFilter: boolean,\r\n    Error: string,\r\n    errorHandler: (err: string) => void,\r\n    filterRoleHandler: (title: string[]) => void,\r\n    filterExpHandler: (num: string[]) => void,\r\n    filterLocationHandler: (title: string[]) => void,\r\n    FilterStatusHandler: (title: string[]) => void,\r\n    tableDataHandler: (user: UserJobProfileForm[]) => void,\r\n    resetFilterHandler: (reset: boolean) => void,\r\n    defaultSortHandler: (value: string) => void,\r\n    countHandler: (num: number) => void\r\n}\r\nexport const adminContext = createContext<adminProps | null>(null)\r\n\r\n// 4.) User profile schema for database\r\nexport type UserJobProfileForm = {\r\n    Id: number,\r\n    FullName: string,    // All key should be same as UserDB Database Table\r\n    Email: string,\r\n    ResumeUrl: string,\r\n    PortfolioUrl: string,\r\n    Year_Experience: string,\r\n    LinkedinUrl: string,\r\n    JobLocation: string,\r\n    JobRole: string,\r\n    JobStatus: string,\r\n    AppliedDate: Date\r\n}"],"mappings":"AAAA,SAAgBA,aAAa,QAAQ,OAAO;AAC5C,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,iBAAiB,MAAM,+BAA+B;;AAG7D;AACC,MAAMC,cAAkD,GAAG,CACxD;EACIC,KAAK,EAAE,iBAAiB;EACxBC,KAAK,EAAEL;AACX,CAAC,EACD;EACII,KAAK,EAAE,4BAA4B;EACnCC,KAAK,EAAEJ;AACX,CAAC,EACD;EACIG,KAAK,EAAE,oBAAoB;EAC3BC,KAAK,EAAEH;AACX,CAAC,CACJ;AACD,eAAeC,cAAc;;AAE7B;;AAcA,OAAO,MAAMG,eAAe,gBAAGP,aAAa,CAAuB,IAAI,CAAC;;AAExE;;AAqBA,OAAO,MAAMQ,YAAY,gBAAGR,aAAa,CAAoB,IAAI,CAAC;;AAElE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}