{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchApi = void 0;\nvar authConfig_1 = require(\"../authConfig\");\n/**\r\n * Attaches a given access token to an API call. Returns information about the user\r\n */\nfunction fetchApi(accessToken) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, bearer, options;\n    return __generator(this, function (_a) {\n      headers = new Headers();\n      bearer = \"Bearer \".concat(accessToken);\n      headers.append(\"Authorization\", bearer);\n      options = {\n        method: \"GET\",\n        headers: headers\n      };\n      return [2 /*return*/, fetch(authConfig_1.apiConfig.userListApi, options).then(function (response) {\n        return response.json();\n      }).catch(function (error) {\n        return console.log(error);\n      })];\n    });\n  });\n}\nexports.fetchApi = fetchApi;","map":{"version":3,"names":["authConfig_1","require","fetchApi","accessToken","headers","Headers","bearer","concat","append","options","method","fetch","apiConfig","userListApi","then","response","json","catch","error","console","log","exports"],"sources":["/app/src/api/userAPI.ts"],"sourcesContent":["ï»¿import { apiConfig } from \"../authConfig\";\r\n\r\n/**\r\n * Attaches a given access token to an API call. Returns information about the user\r\n */\r\nexport async function fetchApi(accessToken: string) {\r\n    const headers = new Headers();\r\n    const bearer = `Bearer ${accessToken}`;\r\n    headers.append(\"Authorization\", bearer);\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: headers\r\n    };\r\n    try {\r\n        const response = await fetch(apiConfig.userListApi, options)\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAEA;;;AAGA,SAAsBC,QAAQA,CAACC,WAAmB;;;;MAExCC,OAAO,GAAG,IAAIC,OAAO,EAAE;MACvBC,MAAM,GAAG,UAAAC,MAAA,CAAUJ,WAAW,CAAE;MAEtCC,OAAO,CAACI,MAAM,CAAC,eAAe,EAAEF,MAAM,CAAC;MAEjCG,OAAO,GAAG;QACZC,MAAM,EAAE,KAAK;QACbN,OAAO,EAAEA;OACZ;MAED,sBAAOO,KAAK,CAACX,YAAA,CAAAY,SAAS,CAACC,WAAW,EAAEJ,OAAO,CAAC,CACvCK,IAAI,CAAC,UAAAC,QAAQ;QAAI,OAAAA,QAAQ,CAACC,IAAI,EAAE;MAAf,CAAe,CAAC,CACjCC,KAAK,CAAC,UAAAC,KAAK;QAAI,OAAAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAAlB,CAAkB,CAAC;;;;AAd3CG,OAAA,CAAAnB,QAAA,GAAAA,QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}